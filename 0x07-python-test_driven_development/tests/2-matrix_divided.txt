================================
test for function matrix_divided
================================

>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

>>> matrix = [
...     [1, -2.2, 3, 4.4, 5],
...     [-6.6, 7.00, 8, 9.999, 10]
... ]
>>> print(matrix_divided(matrix, 3))
[[0.33, -0.73, 1.0, 1.47, 1.67], [-2.2, 2.33, 2.67, 3.33, 3.33]]

>>> matrix = [
...     [1, 2, 3, 4],
...     [4, 5]
... ]
>>> print(matrix_divided(matrix, 4))
Traceback (most recent call last):
TypeError: Each row of the matrix must have the same size

>>> matrix = None
>>> print(matrix_divided(matrix, 5))
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists)of integers/floats

>>> matrix = [1, 2, 3]
>>> print(matrix_divided(matrix, 3))
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists)of integers/floats

>>> matrix = [
...     [123, 43, 23],
...     [12, 42, 12]
... ]

>>> print(matrix_divided(matrix, "strin"))
Traceback (most recent call last):
TypeError: div must be a number

>>> matrix = [
...     [3, "8"],
...     [12, 3]
... ]
>>> print(matrix_divided(matrix, 2))
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists)of integers/floats

>>> matrix = [
...     [3, 8],
...     [12, 6]
... ]
>>> print(matrix_divided(matrix, "2"))
Traceback (most recent call last):
TypeError: div must be a number

>>> print(matrix_divided(matrix, 0))
Traceback (most recent call last):
ZeroDivisionError: division by zero